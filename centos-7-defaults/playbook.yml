####################################################################
#Tasklist: CentOS 7 Default Configuration Automation
#Description: Configures CentOS 7 nodes with the default configuration using ansible
#Author: Peter Potvin
###################################################################
- hosts: all
  gather_facts: true
  become: true
  vars_files:
    - vars/default.yml

  tasks:
  # Upgrade system packages
    - name: upgrade packages via yum
      yum:
        name: "{{ yum_name }}"
        state: "{{ yum_state }}"
      register: yumcommandout
      when:
        - (ansible_facts['distribution_major_version'] == '6') or
          (ansible_facts['distribution_major_version'] == '7')

    - name: Print errors if yum failed
      debug:
        msg: "yum command produced errors"
      when: yumcommandout is not defined

    - name: Install system packages
      yum:
        name: "{{ sys_packages }}"
        state: latest
        update_cache: true
      register: yumcommandout2
      when:
        - (ansible_facts['distribution_major_version'] == '6') or
          (ansible_facts['distribution_major_version'] == '7')

    - name: Print errors if yum failed
      debug:
        msg: "yum command produced errors"
      when: yumcommandout2 is not defined

  # Install Kernel
    - name: Install Kernel
      yum:
        name: "linux-image-amd64"
        state: latest
      register: yumcommandout3
      when:
        - (ansible_facts['distribution_major_version'] == '6') or
          (ansible_facts['distribution_major_version'] == '7')

    - name: Print errors if yum failed
      debug:
        msg: "yum command produced errors"
      when: yumcommandout3 is not defined

  # Install Kernel Headers
    - name: Install Kernel Headers
      yum:
        name: "kernel-headers-amd64"
        state: latest
      register: yumcommandout4
      when:
        - (ansible_facts['distribution_major_version'] == '6') or
          (ansible_facts['distribution_major_version'] == '7')

    - name: Print errors if yum failed
      debug:
        msg: "yum command produced errors"
      when: yumcommandout4 is not defined

  # Wheel Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'

  # User + Key Setup
    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: yes
        create_home: yes
        shell: /bin/bash

    # Ansible SSH Key Setup
    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key_1 }}"

    # User SSH Key Setup
    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key_2 }}"

    # PRT SSH Key Setup
    # See https://github.com/AS212934/PRT for instructions on how to install PRT
    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key_3 }}"

    - name: Disable password authentication for all users (1/2)
      replace:
        path: /etc/ssh/sshd_config
        after: 'PasswordAuthentication'
        regexp: '^(.*)PasswordAuthentication(.*)$'
        replace: ''

    - name: Disable password authentication for all users (2/2)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^(.*)PasswordAuthentication(.*)$'
        line: 'PasswordAuthentication no'

    - name: Disable password authentication for root
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
        state: present
        backup: yes
      notify:
        - restart ssh

  handlers:
    - name: restart ssh
      service:
        name=sshd
        state=restarted

